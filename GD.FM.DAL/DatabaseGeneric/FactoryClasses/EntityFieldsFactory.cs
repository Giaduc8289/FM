///////////////////////////////////////////////////////////////
// This is generated code. 
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: 2.6
// Code is generated on: 20 May 2022 09:12:01
// Code is generated using templates: SD.TemplateBindings.SharedTemplates.NET20
// Templates vendor: Solutions Design.
// Templates version: 
//////////////////////////////////////////////////////////////
using System;
using GD.FM.DAL;
using GD.FM.DAL.HelperClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace GD.FM.DAL.FactoryClasses
{
	/// <summary>Generates IEntityFields2 instances for different kind of Entities.</summary>
	public partial class EntityFieldsFactory
	{
		/// <summary>Private CTor, no instantiation possible.</summary>
		private EntityFieldsFactory()
		{
		}

		/// <summary>General factory entrance method which will return an EntityFields object with the format generated by the factory specified</summary>
		/// <param name="relatedEntityType">The type of entity the fields are for</param>
		/// <returns>The IEntityFields2 instance requested</returns>
		public static IEntityFields2 CreateEntityFieldsObject(GD.FM.DAL.EntityType relatedEntityType)
		{
			IEntityFields2 fieldsToReturn=null;
			IInheritanceInfoProvider inheritanceProvider = InheritanceInfoProviderSingleton.GetInstance();
			IFieldInfoProvider fieldProvider = FieldInfoProviderSingleton.GetInstance();
			switch(relatedEntityType)
			{
				case GD.FM.DAL.EntityType.DanhmuccangEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DanhmuccangEntity");
					break;
				case GD.FM.DAL.EntityType.DanhmucchucvuEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DanhmucchucvuEntity");
					break;
				case GD.FM.DAL.EntityType.DanhmuchanghoaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DanhmuchanghoaEntity");
					break;
				case GD.FM.DAL.EntityType.DanhmuckhachEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DanhmuckhachEntity");
					break;
				case GD.FM.DAL.EntityType.DanhmucnganhangEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DanhmucnganhangEntity");
					break;
				case GD.FM.DAL.EntityType.DanhmucquocgiaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DanhmucquocgiaEntity");
					break;
				case GD.FM.DAL.EntityType.DanhmucungdungEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DanhmucungdungEntity");
					break;
				case GD.FM.DAL.EntityType.DmcapmaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DmcapmaEntity");
					break;
				case GD.FM.DAL.EntityType.DonvitinhEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DonvitinhEntity");
					break;
				case GD.FM.DAL.EntityType.FormcoEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FormcoEntity");
					break;
				case GD.FM.DAL.EntityType.HopdongbanhangEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HopdongbanhangEntity");
					break;
				case GD.FM.DAL.EntityType.HopdongbanhangchitietEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HopdongbanhangchitietEntity");
					break;
				case GD.FM.DAL.EntityType.LogbackupEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LogbackupEntity");
					break;
				case GD.FM.DAL.EntityType.MenuEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MenuEntity");
					break;
				case GD.FM.DAL.EntityType.MenuroleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MenuroleEntity");
					break;
				case GD.FM.DAL.EntityType.NhanvienEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NhanvienEntity");
					break;
				case GD.FM.DAL.EntityType.PhongbanEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhongbanEntity");
					break;
				case GD.FM.DAL.EntityType.PhuongthucthanhtoanEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhuongthucthanhtoanEntity");
					break;
				case GD.FM.DAL.EntityType.PhuongthucvanchuyenEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhuongthucvanchuyenEntity");
					break;
				case GD.FM.DAL.EntityType.RolesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RolesEntity");
					break;
				case GD.FM.DAL.EntityType.ThamsoEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ThamsoEntity");
					break;
				case GD.FM.DAL.EntityType.ThuchienhopdongbanhangEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ThuchienhopdongbanhangEntity");
					break;
				case GD.FM.DAL.EntityType.TygiaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TygiaEntity");
					break;
				case GD.FM.DAL.EntityType.UsersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UsersEntity");
					break;
			}
			return fieldsToReturn;
		}
		
		/// <summary>General method which will return an array of IEntityFieldCore objects, used by the InheritanceInfoProvider. Only the fields defined in the entity are returned, no inherited fields.</summary>
		/// <param name="entityName">the name of the entity to get the fields for. Example: "CustomerEntity"</param>
		/// <returns>array of IEntityFieldCore fields, defined in the entity with the name specified</returns>
		internal static IEntityFieldCore[] CreateFields(string entityName)
		{
			IFieldInfoProvider fieldProvider = FieldInfoProviderSingleton.GetInstance();
			return fieldProvider.GetEntityFieldsArray(entityName);
		}
		



		#region Included Code

		#endregion
	}
}
